<?php
# This file was automatically generated by the MediaWiki 1.33.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "xlp_wiki";
$wgMetaNamespace = "Xlp_wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://localhost:32001";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/xlp.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

# Email sending configuration, uncomment the following to enable it
# Should be modified according to the SMTP server and account
$wgSMTP = array(
	'host' => 'ssl://smtp.gmail.com',
	'IDHost' => 'smtp.gmail.com',
	'localhost' => 'xlp.mit.edu',
	'port' => 465,
	'auth' => true,
	'username' => 'mit2xlp@gmail.com',
	'password' => 'yung079282',
);

$wgEmergencyContact = "mit2xlp@gmail.com";
$wgPasswordSender = "mit2xlp@gmail.com";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = "my_wiki";
$wgDBuser = "root";
$wgDBpassword = "7870A37959142A5FFC07091E112A9D31";
#$wgDBuser = "root";
#$wgDBpassword = "C5BCDEB7E2754F2CBF2C644A586D54B4";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# File uploads
$wgFileExtensions = array_merge( $wgFileExtensions,
	array( 'doc', 'xls', 'ppt', 'docx', 'xlsx', 'pptx',
	       'pdf', 'jpg', 'tiff', 'psd', 'odt', 'odg', 'ods', 'odp',
	       'xmind', 'zip'
        )
);
$wgMaxUploadSize = 104857600;  # 100MiB

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "80fa6ea65496e48cb488e4d62c471061a1348fbd4212e88afb739b70743d9ea1";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "9ad769b65c120401";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

#wfLoadExtension( 'ConfirmEdit' );
# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
#wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'LocalisationUpdate' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'OATHAuth' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'ReplaceText' );
#wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'WikiEditor' );


# Customized configurations

# Piwik
# Piwik is the old version which can be replaced by Matomo
#wfLoadExtension( 'Piwik' );
#$wgPiwikURL = "localhost:82";
#$wgPiwikIDSite = "1";
# Matomo
wfLoadExtension( 'Matomo' );
$wgMatomoURL = "34.233.193.13:32002";
$wgMatomoIDSite = "1";

# Elastica
wfLoadExtension( 'Elastica' );

# CirrusSearch
# Mediawiki 1.33.x requires ElasticSearch 6.5.x
require_once( "$IP/extensions/CirrusSearch/CirrusSearch.php" );
$wgCirrusSearchServers = [ 'elasticsearch' ];
#$wgCirrusSearchServers = [ 'localhost' ];

# SimpleMathJax
wfLoadExtension( 'SimpleMathJax' );

# Math
# Require LaTeX to be installed
#wfLoadExtension( 'Math' );
#$wgTexvc = "$IP/extensions/Math/math/texvc";
#$wgMathValidModes[] = array('png', 'source', 'mathml', 'latex'); 
#$wgDefaultUserOptions['math'] = 'png';

# Capiunto
wfLoadExtension( 'Capiunto' );

# VisualEditor
/*
wfLoadExtension( 'VisualEditor' );
$wgDefaultUserOptions['visualeditor-enable'] = 1; 
$wgHiddenPrefs[] = 'visualeditor-enable'; 
$wgVisualEditorAvailableNamespaces = [ 
	"Help" => true, 
	"Extra" => true 
];
$wgVirtualRestConfig['modules']['parsoid'] = array(   
	'url' => 'http://parsoid:8000',  
	'domain' => 'localhost', 
	'prefix' => 'localhost' 
);
*/

# Scribunto
wfLoadExtension( 'Scribunto' );

# TemplateData
wfLoadExtension( 'TemplateData' );

# PlantUML
# The configuration should be modified to select the proper renderer
$wgPlantUmlFormat="png";  
wfLoadExtension( 'PlantUML' );  
$wgPlantUmlDebug=true; 

# GraphViz
# GraphVis should be installed at the background first
wfLoadExtension( 'GraphViz' );

# MultiUpload
wfLoadExtension( 'MultiUpload' );

# FreeTex
# Require pdflatex(texlive) to be installed at the background
#include '$IP/extensions/FreeTex/FreeTex.php';

# SemanticGlossary
#wfLoadExtension( 'SemanticGlossary' );

# SemanticMediawiki
# Installation of SemanticMediawiki is special
#enableSemantics( 'localhost:81' );

# MediaWiki Language Extension Bundle

wfLoadExtension( 'Babel' );
wfLoadExtension( 'cldr' );
wfLoadExtension( 'CleanChanges' );
$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;
wfLoadExtension( 'LocalisationUpdate' );
$wgLocalisationUpdateDirectory = "$IP/cache";
#wfLoadExtension( 'Translate' );
require_once "$IP/extensions/Translate/Translate.php";
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation'; # No linguistic content. Used for documenting messages
wfLoadExtension( 'UniversalLanguageSelector' );

# Configuration for Translate
/*
$wgTranslateDocumentationLanguageCode = false;
$wgTranslateFuzzyBotName = 'FuzzyBot';
$wgTranslateNewsletterPreference = false;
$wgTranslateLanguageFallbacks = array();
if ( !defined( 'TRANSLATE_FUZZY' ) ) {
	define( 'TRANSLATE_FUZZY', '!!FUZZY!!' );
}
$wgTranslateTranslationServices = array();
$wgTranslateTranslationServices['TTMServer'] = array(
	'database' => false, // Passed to wfGetDB
	'cutoff' => 0.75,
	'type' => 'ttmserver',
	'public' => false,
);
$wgTranslateTranslationServices['Microsoft'] = array(
	'url' => 'http://api.microsofttranslator.com/V2/Http.svc/Translate',
	'key' => null,
	'timeout' => 3,
	'type' => 'microsoft',
);
$wgTranslateTranslationServices['Apertium'] = array(
	'url' => 'http://api.apertium.org/json/translate',
	'pairs' => 'http://api.apertium.org/json/listPairs',
	'key' => null,
	'timeout' => 3,
	'type' => 'apertium',
);
$wgTranslateTranslationServices['Yandex'] = array(
	'url' => 'https://translate.yandex.net/api/v1.5/tr.json/translate',
	'key' => null,
	'pairs' => 'https://translate.yandex.net/api/v1.5/tr.json/getLangs',
	'timeout' => 3,
	'langorder' => array( 'en', 'ru', 'uk', 'de', 'fr', 'pl', 'it', 'es', 'tr' ),
	'langlimit' => 1,
	'type' => 'yandex',
);
$wgTranslateTasks = array(
	'view' => 'ViewMessagesTask',
	'untranslated' => 'ViewUntranslatedTask',
	'optional' => 'ViewOptionalTask',
	'acceptqueue' => 'AcceptQueueMessagesTask',
	'reviewall' => 'ReviewAllMessagesTask',
	'export-as-po' => 'ExportasPoMessagesTask',
	'export-to-file' => 'ExportToFileMessagesTask',
	'custom' => 'CustomFilteredMessagesTask',
);
$wgTranslateSupportUrl = false;
$wgTranslateSupportUrlNamespace = array();
$wgTranslatePermissionUrl = 'Project:Translator';
$wgTranslateSecondaryPermissionUrl = 'Project:Translator';
*/

# Oauth
$wgInvalidUsernameCharacters = '';
wfLoadExtension( 'MW-OAuth2Client' );
$wgOAuth2Client['client']['id']     = '30af553d03a3b09523cb'; // The client ID assigned to you by the provider
$wgOAuth2Client['client']['secret'] = '1d3ef396be47fe5ed1274a9ea2f4216dee227dfc'; // The client secret assigned to you by the provider
$wgOAuth2Client['configuration']['authorize_endpoint']     = 'https://github.com/login/oauth/authorize'; // Authorization URL
$wgOAuth2Client['configuration']['access_token_endpoint']  = 'https://github.com/login/oauth/access_token'; // Token URL
$wgOAuth2Client['configuration']['api_endpoint']           = 'https://api.github.com/user'; // URL to fetch user JSON
$wgOAuth2Client['configuration']['redirect_uri']           = 'http://xlp.mit.edu:32001/index.php/Special:OAuth2Client/callback'; // URL for OAuth2 server to redirect to,
$wgOAuth2Client['configuration']['username'] = 'login'; // JSON path to username
$wgOAuth2Client['configuration']['email'] = 'email'; // JSON path to email
#$wgOAuth2Client['configuration']['http_bearer_token'] = 'Bearer'; // Token to use in HTTP Authentication
#$wgOAuth2Client['configuration']['query_parameter_token'] = 'access_token'; // query parameter to use
$wgOAuth2Client['configuration']['scopes'] = 'openid email profile'; //permissions
//$wgOAuth2Client['configuration']['scopes'] = 'read_citizen_info'; //Permissions
$wgOAuth2Client['configuration']['service_name'] = 'Oauth Registry'; // the name of your service
$wgOAuth2Client['configuration']['service_login_link_text'] = 'OAuth2Login-Github'; // the text of the login link


# Disable anonymous editing and reading
#$wgGroupPermissions['*']['edit'] = false;
#$wgGroupPermissions['*']['read'] = false;

# Disable registry
#$wgGroupPermissions['*']['createaccount'] = false;

# FileExporter
wfLoadExtension( 'FileExporter' );
# FileImporter
wfLoadExtension( 'FileImporter' );

# Show exception details
$wgShowExceptionDetails = true;
$wgSearchType = 'CirrusSearch';
